using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace HW2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            sol3();
            sol3();
        }



        static void sol2()
        {
            Console.WriteLine("Sol2:");
            // Fisher-Yates Shuffle algorithm
            Random rand = new Random();
            int size = 20;
            int[] arr = new int[size];
            //generate random 20 numbers
            for (int i = 0; i < size; i++)
            {
                arr[i] = rand.Next(1, 101);
            }
            printArr(arr);
            // shuffle 3 times
            for (int k = 0; k < 3; k++)
            {
                for (int i = size - 1; i > 0; i--)
                {
                    int j = rand.Next(0, i + 1);
                    // Swap arr[i] and arr[j]
                    int temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
                printArr(arr);
            }


        }
        static void printArr(int[] arr)
        {
            foreach (var item in arr)
            {
                Console.Write(item + " ");
            }
            Console.WriteLine();
        }

        static void sol3()
        {
            Console.WriteLine("Sol3:");
            Console.Write("Enter base size: ");
            int baseSize = int.Parse(Console.ReadLine());
            Console.WriteLine($"Size {baseSize}x{baseSize}");
            Random rand = new Random();
            int size = (int)Math.Pow(baseSize,2);
            int[] arr = new int[size];
            //generate  X numbers
            for (int i = 0; i < size; i++)
            {
                arr[i] = i+1;
            }
            for (int i = size - 1; i > 0; i--)
            {
                int j = rand.Next(0, i + 1);
                // Swap arr[i] and arr[j]
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
            //printArr(arr);
            for (int j =0; j<baseSize; j++)
            {
                //separte line
                for (int i = 0; i < baseSize; i++)
                {
                    Console.Write("+----");
                }
                Console.WriteLine("+");
                // digit
                for (int i = 0; i < baseSize; i++)
                {
                    int temp = arr[i + j * baseSize];
                    if (temp < 10)
                        Console.Write($"| {temp}  ");
                    else
                        Console.Write($"| {temp,2} ");
                }
                Console.WriteLine("|");
            }
            //separte line
            for (int i = 0; i < baseSize; i++)
            {
                Console.Write("+----");
            }
            Console.WriteLine("+");
        }
    }
}
